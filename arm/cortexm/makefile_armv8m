
$(info "!!!!THE CUR BOARD is $(board)")


BIN_PATH = bin/$(board)
OBJ_PATH = obj

CPU_TYPE = cortex-m55
MEM_SIZE = 2048
ifeq ($(board),mps2-an505)
	CPU_TYPE = cortex-m33
	MEM_SIZE = 16
endif

$(info "!!!!THE CUR CPU_TYPE is $(CPU_TYPE)")
IMAGE := $(BIN_PATH)/armv8m.elf

PWD_TOOLCHAIN = /project/gcc/gcc-arm-none-eabi-10.3-2021.10/bin
CROSS_COMPILE = $(PWD_TOOLCHAIN)/arm-none-eabi-

CC = $(CROSS_COMPILE)gcc
LD = $(CROSS_COMPILE)ld
GDB = $(CROSS_COMPILE)gdb
OBJDUMP = $(CROSS_COMPILE)objdump
OBJCOPY = ${TOOL_CHAIN}objcopy
READELF = $(CROSS_COMPILE)readelf

CFLAGS = -mcpu=$(CPU_TYPE) -g -nostdlib -nostartfiles -ffreestanding \
			-Isrc/include \
			-Isrc/platform/$(board)\
			-Isrc/armv8m\
			-Isrc/testcase

all: $(IMAGE)
OBJS = src/armv8m/main.o \
		src/armv8m/os_stdio.o \
		\
		src/platform/$(board)/cmsdk_uart.o \
		src/platform/$(board)/board.o \

include src/cmsis/cmsis.mk
include src/platform/$(board)/platform.mk
include src/platform/$(board)/menu_config.mk
#include src/testcase/testcase.mk
include src/components/components.mk


$(IMAGE): src/armv8m/armv8m.ld   $(OBJS)
	$(LD)  $(OBJS) -T src/armv8m/armv8m.ld -o $(IMAGE)
	$(OBJDUMP) -d $(IMAGE) > $(BIN_PATH)/armv8m.list
	$(OBJDUMP) -t $(IMAGE) | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' > $(BIN_PATH)/armv8m.sym
	$(READELF) -A $(IMAGE)

%.o:%.c
	${CC} $(CFLAGS) -c -o $@ $<

%.o:%.s
	${CC} $(CFLAGS) -c -o $@ $<

dumpvmstate:
	qemu-system-arm -machine $(board) -cpu $(CPU_TYPE) \
	                    -m 1024 \
			    -nographic -serial mon:stdio \
	                    -kernel $(IMAGE) \
			    -dump-vmstate vmstate.json 

qemu:
	@qemu-system-arm -M ? | grep $(board) >/dev/null || exit
	qemu-system-arm -machine $(board) -cpu $(CPU_TYPE) \
	                    -m $(MEM_SIZE) \
			    -nographic -serial mon:stdio \
	                    -kernel $(IMAGE) 
			   
gdbserver:
	qemu-system-arm -machine $(board) -cpu $(CPU_TYPE) -m $(MEM_SIZE) \
			    -nographic -serial mon:stdio \
	                    -kernel $(IMAGE) \
			    -S -s 
gdb: $(IMAGE)
	$(GDB) $^ -ex "target remote:1234"


gdbqemu:
	gdb --args qemu-system-arm -machine $(board) -cpu $(CPU_TYPE)  -m 4096  -nographic -serial mon:stdio -armv8m armv8m.elf


			    
clean:
	rm -rf $(BIN_PATH) $(OBJ_PATH)
.PHONY: all qemu clean
